@using MVC.Domain.SupClass
<style>

    body {
        /*background-color: #081b29;*/
        background-color: #36393F;
        max-width: 100%;
    }
    /* width */
    /*::-webkit-scrollbar {*/
    /*    width: 20px;*/
    /*}*/
    
    /*!* Track *!*/
    /*::-webkit-scrollbar-track {*/
    /*    box-shadow: inset 0 0 5px grey;*/
    /*    border-radius: 10px;*/
    /*}*/
    
    /*!* Handle *!*/
    /*::-webkit-scrollbar-thumb {*/
    /*    background: red;*/
    /*    border-radius: 10px;*/
    /*}*/

    /*.serverdiv {*/
    /*    display: block;*/
    /*    width: 80px;*/
    /*    margin: 0;*/
    /*    position: fixed;*/
    /*    left: 0;*/
    /*    border-radius: 12px;*/
    /*    max-width: 100%;*/
    /*    text-align: center;*/
    /*}*/
.serverdiv {
  display: block;
          width: 80px;
          margin: 0;
          position: fixed;
          left: 0;
          border-radius: 12px;
          max-width: 100%;
          text-align: center;
          overflow: auto;
}
.channelDiv {
display: block;
width: 80px;
margin: 0;
position: fixed;
left: 90px;
border-radius: 12px;
max-width: 100%;
text-align: center;
overflow: auto;
    }
    .channelDiv, .serverdiv {
      padding: 10px;
      border: 1px solid #ccc;
      
    }
    .channelcreatedButton {
        background-color: #0a53be;
        display: block;
    }

    .serverbutton:active {
        background-color: #bb2d3b;
    }

    #ChatDiv {
        /*background-color: #fed9ff;*/
        width: 1295px;
        height: 780px;
        text-align: center;
        padding: 20px;
        background-color: #081b29;
        overflow: auto;
        display: flex;
        flex-direction: column-reverse;
        max-width: 100%;
        border-radius: 30px 5px;
        border-color: black;
        border-style: solid;
        left: 50px;
    }

    .messageBox {
        color: white;
        left: 500px;
    }

    .timeBox {
        color: ghostwhite;
        position: relative;
    }

    .senderBox {
        color: lightgray;
        font-weight: bold;
        position: relative;
        left: -580px;
    }

    .idBox {
        color: honeydew;
        border-color: black;
        border-style: solid;
    }

    .HomeButton {
        /*position: fixed;*/
        left: -10px;
        background-color: lightgray;
        border-radius: 12px;
        top: 5px;
        max-width: 100%;
    }

     .HomeButton:hover {
            background-color: #6e65f3;
            border-radius: 6px;
            max-width: 100%;
        }

    .userPanel {
        color: white;
        position: absolute;
        bottom: 35px;
        left: 0;
        width: 241px;
        background-color: #232428;
    }

    .btnCreateServer:hover:after
    {
        content: "Create a New Server";
    }

    .btnJoinServer:hover:after 
    {
        content: "Join To a New Server";
    }
    .srvrinput{
        width:100px;
    }

    .serverbutton{
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: center;
  padding: 10px;
  background-color: #3498db;
  color: #fff;
  border: none;
  border-radius: 5px;
    }
    .channelcreatedButton{
     width: 100%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: center;
      padding: 10px;
      background-color: #3867ff;
      color: #fff;
      border: none;
      border-radius: 5px;
    }
    .msginput
    {
    width: 1265px;
    height: 50px;    
    }
    #profilePopup {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: #fff;
      border: 1px solid #ccc;
      padding: 20px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      z-index: 9999;
      display: none;
    }
    
    #profilePopup img {
      width: 150px;
      height: 150px;
      border-radius: 50%;
    }
    #closePopup {
      margin-top: 10px;
    }
    #profilePopup{
    background-color: black;
    color: white;
    }
</style>
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
<body>
    <div class="userPanel">
        <p class="userNotif">@MVC.Domain.SupClass.AppMain.User.Username#@AppMain.User.UserId</p>
    </div>
    <header class="topbuttons">
        <form method="post">
            <button class="logoutButton" asp-controller="Home" asp-action="LogOut"><i class='bx bx-log-out'></i></button>
            <button type="submit" class="HomeButton" asp-controller="Home" asp-action="Home"><i class='bx bx-home'></i></button>
        </form>
    </header>

<form method="post">
            <input style="border:thick solid black" name="newserverInput" type="text" class="srvrinput" />
            <button type="submit" class="btnJoinServer" value="newserverInput" asp-controller="Home" asp-action="JoinServer">@*Join a New Server*@<i class='bx bx-plus-circle'></i></button>
            <button type="submit" class="btnCreateServer" value="newserverInput" asp-controller="Home" asp-action="CreateNewServer"><i class='bx bx-message-square-add'></i></button>
            </form>
<div class="serverdiv" id="serverdiv">
    
</div>
 <div id="channelDiv" class="channelDiv"></div>
       
    <div class="ChatDiv" id="ChatDiv">
    </div>
<form method="post">
    <input style="border:thick solid black" value="" name="messageInput" type="text" class="msginput" id="msgInput" />
    @* <button type="submit" class="btnSend" value="messageInput" $1$asp-controller="Home" asp-action="SendMessage"#1#><i class='bx bxs-send'></i></button> *@
</form>

<div id="profilePopup">
        <h1 id="popupUsername"></h1>
  <p id="popupStatus"></p>
  <div id="popupUserInformation">
      <p><strong>Account Created:</strong> <span id="popupAccountCreationDate"></span></p>
            <p id="statusMessage"></p>
      <button id="closePopup">Close</button>
      <button id="sendFriendRequestButton">Send Friend Request</button>
  </div>
  @* <div id="popupServersContainer"> *@
  @*   <h2>Servers</h2> *@
  @*   <ul id="popupServersList"></ul> *@
  @* </div> *@
</div>
</body>
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function getDataAndCreateButtons() {
        fetch('/Home/GetAllServers')
            .then(response => response.json())
            .then(data => {
                const container = document.getElementById('serverdiv');

                data.forEach(serverButton => {
                    const button = document.createElement('button');

                    button.classList.add('serverbutton');
                    button.textContent = serverButton;
                    container.appendChild(button);

                    button.addEventListener('click', function () {
                        $('#channelDiv').empty();
                        console.log(serverButton);
                        var formData = new FormData();
                        formData.append('serverButton', serverButton);

                        fetch('/Home/GetAllChannelsByJs', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.json())
                            .then(data => {
                                const channelContainer = document.getElementById('channelDiv');
                                
                                data.forEach(channelButton => {
                                    const channelcreatedButton = document.createElement('button');
                                    channelcreatedButton.classList.add('channelcreatedButton');
                                    channelcreatedButton.textContent = channelButton;
                                    channelContainer.appendChild(channelcreatedButton);

                                    channelcreatedButton.addEventListener('click', function () {
                                        var channelFormData = new FormData();
                                        channelFormData.append('serverButton', serverButton);
                                        channelFormData.append('channelButton', channelButton);

                                        fetch('/Home/ReturnChatScreen', {
                                            method: 'POST',
                                            body: channelFormData
                                        })
                                            .then(response => {
                                                if (response.ok) {
                                                    console.log('Successful');
                                                    retrieveJsonList();
                                                } else {
                                                    console.error('Request failed:', response.statusText);
                                                }
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                            });
                                    });
                                });
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    });
                });
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function retrieveJsonList() {
        $.ajax({
            url: '@Url.Action("ReloadChatScreen", "Home")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#ChatDiv').empty();

                data.forEach(function (item) {
                    var idPara = document.createElement("h6");
                    idPara.classList.add('idBox');
                    var serverPara = document.createElement("h6");
                    serverPara.classList.add('serverBox');

                    var channelPara = document.createElement("p");
                    channelPara.classList.add('channelBox')

                    var timePara = document.createElement("p");
                    timePara.classList.add('timeBox')

                    var senderPara = document.createElement("p");
                    senderPara.classList.add('senderBox');

                    var messagePara = document.createElement("p");
                    messagePara.classList.add('messageBox');
                    
                    serverPara.textContent = item.server;
                    channelPara.textContent = item.channel;
                    timePara.textContent = item.senderTime;
                    senderPara.textContent = item.senderName;
                    messagePara.textContent = item.message1;
                    idPara.textContent = item.id;
                    $('#ChatDiv').append(messagePara);
                    $('#ChatDiv').append(senderPara);
                    $('#ChatDiv').append(idPara);
                    $('#ChatDiv').append(timePara);
                    idPara.style.color = "#777dda";
                    timePara.style.color = "gray";
                    messagePara.style.color = "white";
                    senderPara.style.color = "#D3D3D3";
                    //try to design them maybe?
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }
    $(document).ready(function () 
    {    
        retrieveJsonList();
        setInterval(retrieveJsonList, 1000);
    });
    document.getElementById('msgInput').addEventListener('keypress', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault(); // Prevent the default form submission

            var messageInput = document.getElementById('msgInput').value;
            if (messageInput !== '' || messageInput != null || messageInput !== "") {
                var formData = new FormData();
                formData.append('messageInput', messageInput);

                var xhr = new XMLHttpRequest();

                xhr.open('POST', '/Home/SendMessage', true);
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        // Request was successful
                        console.log(xhr.responseText);
                        retrieveJsonList();
                        document.getElementById('msgInput').value = '';
                    } else {
                        // Request failed
                        console.error(xhr.statusText);
                    }
                };
                xhr.onerror = function () {
                    console.error('Error occurred while sending the request.');
                };
                xhr.send(formData);
            }
            else {
                return void 0;
            }
        }
    });
    document.addEventListener('contextmenu', function (event) 
    {
        event.preventDefault();
        var targetElement = event.target;

        if (targetElement.classList.contains('idBox')) 
        {
            event.preventDefault();
            var table = document.createElement('table');
            table.classList.add('popupTable');
            table.style.position = 'absolute';
            table.style.top = event.clientY + 'px';
            table.style.left = event.clientX + 'px';
            var row = document.createElement('tr');
            var DeleteMessagecell = document.createElement('button');
            DeleteMessagecell.textContent = 'Delete Message';
            row.appendChild(DeleteMessagecell);
            table.appendChild(row);
            document.body.appendChild(table);
            table.addEventListener('mouseleave', function () {
                document.body.removeChild(table);
            });
        }
        DeleteMessagecell.addEventListener('click', function (event) 
        {
            event.preventDefault();
            var messageToDelete = targetElement.textContent;
            var formData = new FormData();
            formData.append('messageToDelete', messageToDelete);
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/Home/DeleteMessage', true);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    // Request was successful
                    console.log(xhr.responseText);
                    retrieveJsonList();
                } else {
                    // Request failed
                    console.error(xhr.statusText);
                }
            };
            xhr.onerror = function () {
                console.error('Error occurred while sending the request.');
            };
            xhr.send(formData);
        });
    });
    document.addEventListener('contextmenu', function (event) 
            {
                event.preventDefault();
                var targetElement = event.target;
        
                if (targetElement.classList.contains('serverbutton')) {
                    event.preventDefault(); 
        
                    
                    var table = document.createElement('table');
                    table.classList.add('popupTable'); 
        
                    
                    table.style.position = 'absolute';
        
                    
                    table.style.top = event.clientY + 'px';
                    table.style.left = event.clientX + 'px';
        
                    
        
                    var row = document.createElement('tr');
                    var cell = document.createElement('button');
                    cell.textContent = 'Leave Server';
                    row.appendChild(cell);
                    table.appendChild(row);
        
                    
                    document.body.appendChild(table);
        
                    
                    table.addEventListener('mouseleave', function () {
                        
                        document.body.removeChild(table);
                    });
                }
                cell.addEventListener('click', function (event) {
                    event.preventDefault();
                    var serverName = targetElement.textContent;
                    var formData = new FormData();
                    formData.append('serverName', serverName);
                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', '/Home/LeaveServer', true);
                    xhr.onload = function () {
                        if (xhr.status === 200) {
                            // Request was successful
                            console.log(xhr.responseText);
                            $('#serverdiv').empty();
                            getDataAndCreateButtons();
                        } else {
                            // Request failed
                            console.error(xhr.statusText);
                        }
                    };
                    xhr.onerror = function () {
                        console.error('Error occurred while sending the request.');
                    };
                    xhr.send(formData);
                });
                });
    
    document.addEventListener('contextmenu',function (event)
    {
        event.preventDefault();
        var targetElement=event.target;
        //var profileButton = document.getElementById('profileButton');
        var profilePopup = document.getElementById('profilePopup');
        //var popupAvatar = document.getElementById('popupAvatar');
        var popupUsername = document.getElementById('popupUsername');
        //var popupStatus = document.getElementById('popupStatus');
        var popupDiscordTag = document.getElementById('popupDiscordTag');
        //var popupUserID = document.getElementById('popupUserID');
        var popupAccountCreationDate = document.getElementById('popupAccountCreationDate');
        //var popupServersList = document.getElementById('popupServersList');
        var closePopupButton = document.getElementById('closePopup');
        var popupStatusMessage = document.getElementById('statusMessage');

        if (targetElement.classList.contains('senderBox'))
        {
            event.preventDefault();
            var table=document.createElement('table');
             table.classList.add('popupTable'); 
             table.style.position = 'absolute';
             table.style.top = event.clientY + 'px';
             table.style.left = event.clientX + 'px';
             var row = document.createElement('tr');
             var cell = document.createElement('button');
             cell.textContent = 'Show Profile';
             row.appendChild(cell);
             table.appendChild(row);
             document.body.appendChild(table);
             table.addEventListener('mouseleave',function (){
                 document.body.removeChild(table);
             });
             closePopupButton.addEventListener('click', function() {
               profilePopup.style.display = 'none';
             });
        }
        cell.addEventListener('click',function (event)
        {
           event.preventDefault();
           var userDetails=targetElement.textContent;
           var formData = new FormData();
           formData.append('userDetails', userDetails);
           var xhr = new XMLHttpRequest();
           xhr.open('POST', '/Home/ProfileDetailsRequest', true);
           xhr.onload = function () {
               if (xhr.status === 200) {
                   // Request was successful
                   
                   var responseData=JSON.parse(xhr.responseText);
                   console.log(responseData);
                   profilePopup.style.display='flex';
                    popupUsername.textContent = responseData.username+"#"+responseData.userId;
                    popupAccountCreationDate.textContent=responseData.creationDate;
                    popupStatusMessage.textContent=responseData.statusMessage;
                    //console.clear();
               } 
               else 
               {
                   console.error(xhr.statusText);
               }
           };
           xhr.onerror = function () {
               console.error('Error occurred while sending the request.');
           };
           xhr.send(formData);
        });
    });
    const sendfriendrequestButton=document.getElementById('sendFriendRequestButton');
    sendfriendrequestButton.addEventListener('click',function (event)
    {
        event.preventDefault();
        var friendName = document.getElementById('popupUsername').textContent;
        var formData=new FormData();
        formData.append('friendName',friendName);
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/Home/SendFriendRequest', true);
        xhr.onload=function (){
            if (xhr.status===200)
            {
                console.log("Successfully Sent");
            }
             else 
             {
                 console.error(xhr.statusText);
             }
             };
           xhr.onerror = function () {
               console.error('Error occurred while sending the request.');
           };
           xhr.send(formData);
    });
    getDataAndCreateButtons();
</script>
