@using MVC.Domain.Models;@using MVC.Domain.SupClass;@model List<MVC.Domain.Models.Server>@{    string[] chnl;    var channel = new MVC.Domain.Models.Server();    AppMain.Servers = new MVC.Domain.Models.Server();}<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'><style>    body {        background-color: #081b29;    }    .chnlDiv {        display: block;        width: 50px;        margin: 0;        position: fixed;        left: 0;        border-radius: 12px;        max-width: 100%;    }    .HomeButton {        position: fixed;        left: 0;        background-color: lightgray;        border-radius: 12px;        top: 5px;        max-width: 100%;    }    .HomeButton:hover{            background-color: #6e65f3;            border-radius: 6px;            max-width: 100%;    }    .navbar-collapse collapse d-sm-inline-flex justify-content-between{        color:white;        max-width: 100%;    }    .channelselectionbutton{        border-radius: 12px;        font-family: 'Comic Sans MS';    }    .channelselectionbutton:hover{        background-color: #00abf0;        max-width: 100%;    }</style><header class="topbuttons">    <form method="post">        <button class="logoutButton" asp-controller="Home" asp-action="LogOut"><i class='bx bx-log-out'></i></button>        <button type="submit" class="HomeButton" asp-controller="Home" asp-action="Home"><i class='bx bx-home'></i></button>        <button class="getbacktoChoosingserver" asp-controller="Home" asp-action="GetBackToChoosingServer">Change Server</button>    </form></header>@*creating a new channel*@<header>    </header><form method="post"><div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">    <input style="border:thick solid black" name="newchannelInput" type="text" class="chnlinput"/>    <button type="submit" class="btnSend" value="newchannelInput" asp-controller="Home" asp-action="CreateNewChannel">Yeni Kanal Ekle</button></div></form>@*sending the selected channel*@<div class="chnlDiv"><form method="post">@foreach(var item in Model){    chnl = item.Channels.Split(',');    for (int i = 0; i < chnl.Count(); i++)    {        channel.Channels = chnl[i];            <button name="channelButton"                 type="submit"                 class="channelselectionbutton"                value="@channel.Channels"                asp-controller="Home"            asp-action="ReturnChatScreen">            @channel.Channels            </button>        }    }</form></div>